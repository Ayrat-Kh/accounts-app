/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/login/google-auth": {
    /** Google auth verification */
    post: {
      parameters: {
        body: {
          /** Google login request */
          data: definitions["auth.GoogleLoginRequest"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["auth.UserLoginResult"];
        };
        /** Bad Request */
        400: {
          schema: definitions["helpers.ErrorResponse"];
        };
      };
    };
  };
  "/v1/expenses": {
    /** Get expenses for the logged in user */
    get: {
      parameters: {
        header: {
          /** Bearer */
          Authorization: string;
        };
        query: {
          /** page or 1 by default */
          page: number;
          /** pageSize or 300 by default */
          pageSize: number;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["expenses.ExpensesResult"];
        };
        /** Bad Request */
        400: {
          schema: definitions["helpers.ErrorResponse"];
        };
      };
    };
    /** Create an expense for a logged in user */
    post: {
      parameters: {
        header: {
          /** Bearer */
          Authorization: string;
        };
        body: {
          /** Update expense model */
          data: definitions["expenses.ExpenseUpsertDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["expenses.ExpenseResult"];
        };
        /** Bad Request */
        400: {
          schema: definitions["helpers.ErrorResponse"];
        };
      };
    };
  };
  "/v1/expenses/:expenseId": {
    /** Get expense by expenseId */
    get: {
      parameters: {
        header: {
          /** Bearer */
          Authorization: string;
        };
        path: {
          /** :expenseId */
          expenseId: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["expenses.ExpenseResult"];
        };
        /** Bad Request */
        400: {
          schema: definitions["helpers.ErrorResponse"];
        };
      };
    };
    /** Update an expense for a logged in user */
    put: {
      parameters: {
        header: {
          /** Bearer */
          Authorization: string;
        };
        path: {
          /** :expenseId */
          expenseId: string;
        };
        body: {
          /** Update expense model */
          data: definitions["expenses.ExpenseUpsertDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["expenses.ExpenseResult"];
        };
        /** Bad Request */
        400: {
          schema: definitions["helpers.ErrorResponse"];
        };
      };
    };
  };
  "/v1/users/:userId": {
    /** Get user info */
    get: {
      parameters: {
        header: {
          /** Bearer */
          Authorization: string;
        };
        path: {
          /** uuid or me - to get info for the logged in user */
          userId: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user.UserResult"];
        };
        /** Bad Request */
        400: {
          schema: definitions["helpers.ErrorResponse"];
        };
      };
    };
    /** Update user info */
    put: {
      parameters: {
        body: {
          /** User update data */
          data: definitions["user.UpdateUserDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user.UserResult"];
        };
        /** Bad Request */
        400: {
          schema: definitions["helpers.ErrorResponse"];
        };
      };
    };
  };
}

export interface definitions {
  "auth.GoogleLoginRequest": {
    accessToken: string;
  };
  "auth.UserLoginResult": {
    accessToken: string;
    sessionToken: string;
    user: definitions["user.UserDto"];
  };
  "expenses.ExpenseDto": {
    category: string;
    createdAt: number;
    currencyCode: string;
    details: definitions["expenses.ExpenseItemDto"][];
    id: string;
    name: string;
    total: number;
    updatedAt: number;
    userId: string;
  };
  "expenses.ExpenseItemDto": {
    currencyCode: string;
    name: string;
    price: number;
  };
  "expenses.ExpenseResult": {
    expense: definitions["expenses.ExpenseDto"];
  };
  "expenses.ExpenseUpsertDto": {
    category: string;
    currencyCode: string;
    details: definitions["expenses.ExpenseItemDto"][];
    name: string;
    total: number;
  };
  "expenses.ExpensesResult": {
    expenses: definitions["expenses.ExpenseDto"][];
  };
  "helpers.ErrorResponse": {
    code: string;
    message: string;
  };
  "user.UpdateUserDto": {
    alias?: string;
    firstName?: string;
    lastName?: string;
    settings: definitions["user.UserSettingsDb"];
  };
  "user.UserDto": {
    alias?: string;
    email: string;
    firstName?: string;
    googleId?: string;
    id: string;
    lastName?: string;
    settings: definitions["user.UserSettingsDto"];
  };
  "user.UserResult": {
    user: definitions["user.UserDto"];
  };
  "user.UserSettingsDb": {
    defaultCurrency?: string;
  };
  "user.UserSettingsDto": {
    defaultCurrency?: string;
  };
}

export interface operations {}

export interface external {}
